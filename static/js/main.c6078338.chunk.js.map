{"version":3,"sources":["pages/HighScoresPage/HighScoresPage.module.css","components/GuessRow/GuessRow.module.css","components/ColorPicker/ColorPicker.module.css","components/GuessPeg/GuessPeg.module.css","components/ScoreButton/ScoreButton.module.css","components/GameBoard/GameBoard.module.css","components/GameTimer/GameTimer.module.css","components/GuessPeg/GuessPeg.jsx","components/GuessPegs/GuessPegs.jsx","components/GuessScore/GuessScore.jsx","components/ScoreButton/ScoreButton.jsx","components/GuessRow/GuessRow.jsx","components/GameBoard/GameBoard.jsx","components/ColorPicker/ColorPicker.jsx","components/GameTimer/GameTimer.jsx","components/NewGameButton/NewGameButton.jsx","components/NavBar/NavBar.jsx","pages/GamePage/GamePage.jsx","pages/SettingsPage/SettingsPage.jsx","utils/tokenService.js","utils/scoresService.js","pages/HighScoresPage/HighScoresPage.jsx","utils/utilities.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","GuessPeg","props","className","styles","peg","style","backgroundColor","color","border","cursor","currentGuess","onClick","handlePegClick","GuessPegs","colors","code","GuessScore","score","scores","repeat","perfect","almost","split","baseStyle","width","height","margin","borderRadius","pegStyles","borderColor","map","idx","key","ScoreButton","button","disabled","handleScoreClick","GuessRow","rowNum","rowIdx","guess","includes","GameBoard","guesses","length","ColorPicker","selColorIdx","handleColorSelection","GameTimer","handleTick","isTiming","handleTimerUpdate","this","timerId","setInterval","clearInterval","seconds","mins","Math","floor","toString","padStart","secs","formatTime","elapsedTime","Component","NewGameButton","handleNewGameClick","NavBar","nav","user","to","handleLogout","name","GamePage","winTries","SettingsPage","selectedLevelStyle","levels","Object","keys","colorsLookup","level","difficulty","handleDifficultyChange","history","push","getToken","token","localStorage","getItem","JSON","parse","atob","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","BASE_URL","index","options","method","headers","tokenService","fetch","then","res","json","create","body","stringify","HighScoresPage","scoresService","handleUpdateScores","scoreRows","initials","numGuesses","HighScores","table","cancel","signup","Headers","ok","Error","getUser","logout","login","creds","SignupForm","state","email","password","passwordConf","handleChange","e","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","message","onSubmit","type","placeholder","onChange","isFormInvalid","SignupPage","msg","LoginPage","pw","alert","Easy","Moderate","Difficult","App","isHighScore","guessesCopy","lastScore","curState","colorIdx","getInitialState","pegIdx","currentGuessIdx","guessCopy","codeCopy","guessCodeCopy","secretCodeCopy","forEach","foundIdx","indexOf","scoreCopy","prompt","substr","getNewGuess","genCode","numColors","Array","fill","dummy","random","lastGuess","getWinTries","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6078338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HighScores\":\"HighScoresPage_HighScores__pVKOC\",\"cancel\":\"HighScoresPage_cancel__2M7KN\",\"table\":\"HighScoresPage_table__2duiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessRow\":\"GuessRow_GuessRow__2xB0Q\",\"rowNum\":\"GuessRow_rowNum__2MfpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPicker\":\"ColorPicker_ColorPicker__2MEvt\",\"button\":\"ColorPicker_button__2D9S8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peg\":\"GuessPeg_peg__1qANj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ScoreButton_button__2ZFt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__2sC3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameTimer\":\"GameTimer_GameTimer__PY19_\"};","import React from 'react';\nimport styles from './GuessPeg.module.css';\n\nconst GuessPeg = (props) => (\n  <div\n    className={styles.peg}\n    style={{\n      backgroundColor: props.color,\n      border: props.color ? `1px solid ${props.color}`: '1px dashed grey',\n      cursor: props.currentGuess && 'pointer'\n    }}\n    onClick={props.currentGuess ? props.handlePegClick : null}\n  />\n);\n\nexport default GuessPeg;\n","import React from 'react';\nimport GuessPeg from '../GuessPeg/GuessPeg';\nimport './GuessPegs.css';\n\nconst GuessPegs = (props) => (\n  <div className='GuessPegs'>\n    <GuessPeg\n      color={props.colors[props.code[0]]}\n      currentGuess={props.currentGuess}\n      handlePegClick={() => props.handlePegClick(0)}\n    />\n    <GuessPeg\n      color={props.colors[props.code[1]]}\n      currentGuess={props.currentGuess}\n      handlePegClick={() => props.handlePegClick(1)}\n    />\n    <GuessPeg\n      color={props.colors[props.code[2]]}\n      currentGuess={props.currentGuess}\n      handlePegClick={() => props.handlePegClick(2)}\n    />\n    <GuessPeg\n      color={props.colors[props.code[3]]}\n      currentGuess={props.currentGuess}\n      handlePegClick={() => props.handlePegClick(3)}\n    />\n  </div>\n);\n\nexport default GuessPegs;\n","import React from 'react';\nimport './GuessScore.css';\n\nconst GuessScore = ({ score }) => {\n  let scores = ('P'.repeat(score.perfect) + 'A'.repeat(score.almost) +\n    'I'.repeat(4 - score.perfect - score.almost)).split('');\n  \n  let baseStyle = {\n    width: 10,\n    height: 10,\n    margin: 1,\n    border: '2px solid',\n    borderRadius: '50%'\n  };\n\n  let pegStyles = {\n    'P': {\n      borderColor: 'black',\n      backgroundColor: 'black'\n    },\n    'A': {\n      borderColor: 'black',\n      backgroundColor: 'white'\n    },\n    'I': {\n      borderColor: 'white',\n      backgroundColor: 'lightgrey'\n    }\n  };\n  \n  return (\n    <div className='GuessScore'>\n      {scores.map((score, idx) =>\n        <div\n          key={idx}\n          style={{...baseStyle, ...pegStyles[score]}} />\n      )}\n    </div>\n  );\n}\n\nexport default GuessScore;\n","import React from 'react';\nimport styles from './ScoreButton.module.css';\n\nconst ScoreButton = (props) => (\n  <button\n    className={`${styles.button} btn btn-default`}\n    disabled={props.disabled}\n    onClick={props.handleScoreClick}\n  >\n    ✔\n  </button>\n);\n\nexport default ScoreButton;\n","import React from 'react';\nimport GuessPegs from '../GuessPegs/GuessPegs';\nimport GuessScore from '../GuessScore/GuessScore';\nimport ScoreButton from '../ScoreButton/ScoreButton';\nimport styles from './GuessRow.module.css';\n\nconst GuessRow = (props) => (\n  <div className={styles.GuessRow}>\n    <div\n      className={styles.rowNum}\n      style={{color: props.currentGuess ? 'black' : 'lightgrey'}}\n    >\n      {props.rowIdx + 1}\n    </div>\n    <GuessPegs\n      colors={props.colors}\n      code={props.guess.code}\n      currentGuess={props.currentGuess}\n      handlePegClick={props.handlePegClick}\n    />\n    {\n      props.currentGuess && props.guess.score.perfect !== 4 ?\n        <ScoreButton\n          disabled={props.guess.code.includes(null)}\n          handleScoreClick={props.handleScoreClick}\n        /> :\n        <GuessScore score={props.guess.score} />\n    }\n  </div>\n);\n\nexport default GuessRow;\n","import React from 'react';\nimport GuessRow from '../GuessRow/GuessRow';\nimport styles from './GameBoard.module.css';\n\nconst GameBoard = (props) => (\n  <div className={styles.GameBoard}>\n    {props.guesses.map((guess, idx) =>\n      <GuessRow\n        guess={guess}\n        colors={props.colors}\n        rowIdx={idx}\n        currentGuess={idx === (props.guesses.length - 1)}\n        handlePegClick={props.handlePegClick}\n        handleScoreClick={props.handleScoreClick}\n        key={idx}\n      />\n    )}\n  </div>\n);\n\nexport default GameBoard;\n","import React from 'react';\nimport styles from './ColorPicker.module.css';\n\nconst ColorPicker = (props) => (\n  <div className={styles.ColorPicker}>\n    {props.colors.map((color, idx) =>\n      <button\n        key={color}\n        className={styles.button}\n        style={{\n          backgroundColor: props.selColorIdx === idx ? 'white' : color,\n          borderColor: color\n        }}\n        onClick={() => props.handleColorSelection(idx)}\n      />\n    )}\n  </div>\n);\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport styles from './GameTimer.module.css';\n\nfunction formatTime(seconds) {\n  let mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n  let secs = (seconds % 60).toString().padStart(2, '0');\n  return `${mins}:${secs}`;\n}\n\nclass GameTimer extends Component {\n\n  handleTick = () => {\n    // Ignore ticks?\n    if (!this.props.isTiming) return;\n    this.props.handleTimerUpdate();\n  };\n\n  /*--- Lifecycle Methods ---*/\n\n  componentDidMount() {\n    this.timerId = setInterval(this.handleTick, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className={`${styles.GameTimer} flex-h`}>\n        {formatTime(this.props.elapsedTime)}\n      </div>\n    );\n  }\n}\n\nexport default GameTimer;\n","import React from 'react';\n\nconst NewGameButton = (props) => (\n  <button\n    className='btn btn-default'\n    onClick={props.handleNewGameClick}\n  >\n    New Game\n  </button>\n);\n\nexport default NewGameButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n  let nav = props.user ?\n    <div>\n      <Link to='/high-scores' className='NavBar-link'>HIGH SCORES</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n      <Link to='' className='NavBar-link' onClick={props.handleLogout}>LOG OUT</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n      <span className='NavBar-welcome'>WELCOME, {props.user.name}</span>\n    </div>\n    :\n    <div>\n      <Link to='/login' className='NavBar-link'>LOG IN</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;\n      <Link to='/signup' className='NavBar-link'>SIGN UP</Link>\n    </div>;\n\n  return (\n    <div className='NavBar'>\n      {nav}\n    </div>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GameBoard from '../../components/GameBoard/GameBoard';\nimport ColorPicker from '../../components/ColorPicker/ColorPicker';\nimport GameTimer from '../../components/GameTimer/GameTimer';\nimport NewGameButton from '../../components/NewGameButton/NewGameButton';\nimport NavBar from '../../components/NavBar/NavBar';\nimport './GamePage.css';\n\nconst GamePage = (props) => {\n  return (\n    <div className=\"GamePage\">\n      <NavBar\n        user={props.user}\n        handleLogout={props.handleLogout}\n      />\n      <div className=\"flex-h align-flex-end\">\n        <GameBoard\n          colors={props.colors}\n          guesses={props.guesses}\n          handlePegClick={props.handlePegClick}\n          handleScoreClick={props.handleScoreClick}\n        />\n        <div className='GamePage-controls'>\n          <ColorPicker\n            colors={props.colors}\n            selColorIdx={props.selColorIdx}\n            handleColorSelection={props.handleColorSelection}\n          />\n          <GameTimer\n            elapsedTime={props.elapsedTime}\n            handleTimerUpdate={props.handleTimerUpdate}\n            isTiming={props.isTiming}\n          />\n          { props.user && <Link className='btn btn-default GamePage-link-margin' to='/high-scores'>High Scores</Link>}\n          <Link className='btn btn-default GamePage-link-margin' to='/settings'>Difficulty</Link>\n          <NewGameButton handleNewGameClick={props.handleNewGameClick}/>\n        </div>\n      </div>\n      <footer className='header-footer'>\n        {(props.winTries ? `You Won in ${props.winTries} Guesses!` : 'Good Luck!')}\n      </footer>\n    </div>\n  );\n\n};\n\nexport default GamePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './SettingsPage.css';\n\nconst SettingsPage = (props) => {\n\n  const selectedLevelStyle = {\n    border: '2px solid #333'\n  };\n\n  function handleDifficultyChange(level) {\n    props.handleDifficultyChange(level);\n    props.history.push('/');\n  }\n\n  const colorKeys = Object.keys(props.colorsLookup);\n\n  const levels = colorKeys.map(level => (\n    <div className='Settings-level-row' key={level}>\n      <button className=\"Settings-level-btn btn btn-default\"\n        style={level === props.difficulty ? selectedLevelStyle : null}\n        disabled={level === props.difficulty}\n        onClick={() => handleDifficultyChange(level)}\n      >\n        {level}\n      </button>\n      <div className='Settings-level-colors'>\n        {props.colorsLookup[level].map(color => \n          <div\n            className='Settings-color'\n            style={{backgroundColor: color}}\n            key={color}\n          />\n        )}\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className='Settings'>\n      <header className='header-footer'>Set Difficulty Level</header>\n      <div>\n        {levels}\n      </div>\n      <div>\n        <Link className='Settings-cancel btn btn-default btn-sm' to='/'>Cancel</Link>\n      </div>\n    </div>\n  );\n\n};\n\nexport default SettingsPage;\n","function setToken(token) {\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/scores/';\n\nexport default {\n  index,\n  create\n};\n\nfunction index() {\n  const options = {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction create(score) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      // Add this header - don't forget the space after Bearer\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    },\n    body: JSON.stringify(score)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './HighScoresPage.module.css';\nimport scoresService from '../../utils/scoresService';\nimport { formatTime } from '../../utils/utilities';\n\nclass HighScoresPage extends Component {\n\n  async componentDidMount() {\n    const scores = await scoresService.index();\n    this.props.handleUpdateScores(scores);\n  }\n\n  render() {\n    const scoreRows = this.props.scores.map((score, idx) => (\n      <tr key={idx}>\n        <td><span className=\"badge\">{idx + 1}</span></td>\n        <td>{score.initials}</td>\n        <td>{score.numGuesses}</td>\n        <td>{formatTime(score.seconds)}</td>\n      </tr>\n    ));\n  \n    return (\n      <div className={styles.HighScores}>\n        <header className='header-footer'>High Scores</header>\n        {this.props.scores.length ? \n          <table className={`${styles.table} table text-info`}>\n            <thead>\n              <tr><th width={80}>#</th><th width={100}>Initials</th><th width={100}>Guesses</th><th>Seconds</th></tr>\n            </thead>\n            <tbody>\n              {scoreRows}\n            </tbody>\n          </table>\n          :\n          <h4 className='text-info'>No High Scores Yet</h4>\n        }\n        <div>\n          <Link className={`${styles.cancel} btn btn-default btn-sm`} to='/'>Back to Game</Link>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default HighScoresPage;\n","export function formatTime(seconds) {\n  const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n  const secs = (seconds % 60).toString().padStart(2, '0');\n  return `${mins}:${secs}`;\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"header-footer\">Sign Up</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <header className=\"header-footer\">Log In</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport GamePage from '../../pages/GamePage/GamePage';\nimport SettingsPage from '../SettingsPage/SettingsPage';\nimport HighScoresPage from '../HighScoresPage/HighScoresPage';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport scoresService from '../../utils/scoresService';\nimport userService from '../../utils/userService';\nimport tokenService from '../../utils/tokenService';\n\nconst colors = {\n  Easy: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD'],\n  Moderate: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD', '#B7D968'],\n  Difficult: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD', '#B7D968', '#555E7B']\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ...this.getInitialState(),\n      difficulty: 'Easy',\n      scores: [],\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser()\n    };\n  }\n\n  getInitialState() {\n    return {\n      selColorIdx: 0,\n      guesses: [this.getNewGuess()],\n      code: this.genCode(),\n      elapsedTime: 0,\n      isTiming: true\n    };\n  }\n\n  getNewGuess() {\n    return {\n      code: [null, null, null, null],\n      score: {\n        perfect: 0,\n        almost: 0\n      }\n    };\n  }\n\n  genCode() {\n    let numColors = this.state && colors[this.state.difficulty].length;\n    numColors = numColors || 4;\n    return new Array(4).fill().map(dummy => Math.floor(Math.random() * numColors));\n  }\n\n  getWinTries() {\n    // if winner, return num guesses, otherwise 0 (no winner)\n    let lastGuess = this.state.guesses.length - 1;\n    return this.state.guesses[lastGuess].score.perfect === 4 ? lastGuess + 1 : 0;\n  }\n\n  isHighScore = (guessesCopy) => {\n    let lastScore = this.state.scores[this.state.scores.length - 1];\n    return (guessesCopy.length < lastScore.numGuesses || (\n      guessesCopy.length === lastScore.numGuesses &&\n      this.state.elapsedTime < lastScore.seconds\n    ));\n  }\n\n  /*--- Callback Methods ---*/\n\n  handleTimerUpdate = () => {\n    this.setState((curState) => ({elapsedTime: ++curState.elapsedTime}));\n  }\n\n  handleDifficultyChange = (level) => {\n    // Use callback to ensure level is updated BEFORE calling handleNewGameClick\n    this.setState({difficulty: level}, () => this.handleNewGameClick());\n  }\n  \n  handleColorSelection = (colorIdx) => {\n    this.setState({selColorIdx: colorIdx});\n  }\n\n  handleNewGameClick = () => {\n    this.setState(this.getInitialState());\n  }\n\n  handlePegClick = (pegIdx) => {\n    // Get index of last guess object\n    let currentGuessIdx = this.state.guesses.length - 1;\n\n    // Always replace objects/arrays with NEW ones\n    let guessesCopy = [...this.state.guesses];\n    let guessCopy = {...guessesCopy[currentGuessIdx]};\n    let codeCopy = [...guessCopy.code];\n\n    // Update the NEW code array with the currently selected color\n    codeCopy[pegIdx] = this.state.selColorIdx;\n\n    // Update the NEW guess object\n    guessCopy.code = codeCopy;\n\n    // Update the NEW guesses array\n    guessesCopy[currentGuessIdx] = guessCopy;\n\n    // Update state with the NEW guesses array\n    this.setState({\n        guesses: guessesCopy\n    });\n  }\n\n  handleScoreClick = () => {\n    // Need the index of the current guess object (last object in guesses array)\n    let currentGuessIdx = this.state.guesses.length - 1;\n\n    // Create \"working\" copies of the \"guessed\" code and the secret\n    // code so that we can modify them as we compute the number of\n    // perfect and almost without messing up the actual ones in state\n    let guessCodeCopy = [...this.state.guesses[currentGuessIdx].code];\n    let secretCodeCopy = [...this.state.code];\n\n    let perfect = 0, almost = 0;\n\n    // First pass computes number of \"perfect\"\n    guessCodeCopy.forEach((code, idx) => {\n      if (secretCodeCopy[idx] === code) {\n        perfect++;\n        // Ensure same choice is not matched again\n        // by updating both elements in the \"working\"\n        // arrays to null\n        guessCodeCopy[idx] = secretCodeCopy[idx] = null;\n      }\n    });\n\n    // Second pass computes number of \"almost\"\n    guessCodeCopy.forEach((code, idx) => {\n      if (code === null) return;\n      let foundIdx = secretCodeCopy.indexOf(code);\n      if (foundIdx > -1) {\n        almost++;\n        // Again, ensure same choice is not matched again\n        secretCodeCopy[foundIdx] = null;\n      }\n    });\n\n    // State must only be updated with NEW objects/arrays\n        // Always replace objects/arrays with NEW ones\n    let guessesCopy = [...this.state.guesses];\n    let guessCopy = {...guessesCopy[currentGuessIdx]};\n    let scoreCopy = {...guessCopy.score};\n\n    scoreCopy.perfect = perfect;\n    scoreCopy.almost = almost;\n    guessCopy.score = scoreCopy;\n    guessesCopy[currentGuessIdx] = guessCopy;\n\n    if (perfect === 4) {\n      // Chicken dinner - need to stop the timer!\n      this.setState(state => ({isTiming: false}), async function() {\n        // Do high-score logic in this callback\n        if ((this.state.scores.length < 20 || this.isHighScore(guessesCopy))) {\n          let initials = prompt('Congrats you have a top-20 score! Enter your initials: ').substr(0, 3);\n          await scoresService.create({ initials, numGuesses: guessesCopy.length, seconds: this.state.elapsedTime });\n          this.props.history.push('/high-scores');\n        }        \n      });\n    } else {\n      guessesCopy.push(this.getNewGuess());\n    }\n\n    this.setState({\n      guesses: guessesCopy,\n      // This is a great way to update isTiming\n      isTiming: perfect !== 4\n    });\n  }\n\n  handleUpdateScores = (scores) => {\n    this.setState({ scores });\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\n  /*--- Lifecycle Methods ---*/\n\n  async componentDidMount() {\n    const scores = await scoresService.index();\n    this.setState({ scores });\n  }\n\n  render() {\n    let winTries = this.getWinTries();\n    return (\n      <div>\n        <header className='header-footer'>R E A C T &nbsp;&nbsp;&nbsp;  M A S T E R M I N D</header>\n        <Switch>\n          <Route exact path='/' render={() =>\n            <GamePage\n              winTries={winTries}\n              colors={colors[this.state.difficulty]}\n              selColorIdx={this.state.selColorIdx}\n              guesses={this.state.guesses}\n              elapsedTime={this.state.elapsedTime}\n              isTiming={this.state.isTiming}\n              handleColorSelection={this.handleColorSelection}\n              handleNewGameClick={this.handleNewGameClick}\n              handlePegClick={this.handlePegClick}\n              handleScoreClick={this.handleScoreClick}\n              handleTimerUpdate={this.handleTimerUpdate}\n              handleLogout={this.handleLogout}\n              user={this.state.user}\n            />\n          }/>\n          <Route exact path='/settings' render={props => \n            <SettingsPage\n              {...props} \n              colorsLookup={colors}\n              difficulty={this.state.difficulty}\n              handleDifficultyChange={this.handleDifficultyChange}\n            />\n          }/>\n          <Route exact path='/signup' render={({ history }) => \n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n          <Route exact path='/login' render={({ history }) => \n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n          <Route exact path='/high-scores' render={() => \n            userService.getUser() ? \n              <HighScoresPage\n                scores={this.state.scores}\n                handleUpdateScores={this.handleUpdateScores}\n              />\n            :\n              <Redirect to='/login'/>\n          }/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><Route component={App}/></Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}